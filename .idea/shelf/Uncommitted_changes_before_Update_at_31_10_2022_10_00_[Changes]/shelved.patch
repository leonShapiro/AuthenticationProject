Index: src/main/java/AuthenticationProject/Services/AuthenticationService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package AuthenticationProject.Services;\r\n\r\nimport AuthenticationProject.User;\r\nimport AuthenticationProject.UserRepository.UserRepository;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.concurrent.ThreadLocalRandom;\r\n\r\npublic class AuthenticationService {\r\n    private static AuthenticationService authenticationService;\r\n\r\n    private AuthenticationService() {\r\n    }\r\n\r\n    public static synchronized AuthenticationService getInstance() {\r\n        if (authenticationService == null) {\r\n            authenticationService = new AuthenticationService();\r\n        }\r\n        return authenticationService;\r\n    }\r\n\r\n    public static HashMap<String, String> userTokens = new HashMap<>();\r\n    ;\r\n\r\n\r\n    public static boolean authUser(String id, String token) {\r\n        for (HashMap.Entry<String, String> entry : userTokens.entrySet()) {\r\n            if (entry.getKey().equals(id)) {\r\n                return entry.getValue().equals(token);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static String createToken() {\r\n        return getSaltString(18);\r\n    }\r\n\r\n    public static HashMap<String, String> logIn(String email, String password) {\r\n        //check if the user is not loged in.\r\n        //check if it's user -> return id\r\n        String id = UserRepository.checkIfUserExists(email, password);\r\n        if (userTokens.containsKey(id)) {\r\n            throw new IllegalArgumentException(\"the user is logged in \");\r\n        }\r\n        String token = createToken();\r\n        userTokens.put(id, token);\r\n        HashMap<String, String> res = new HashMap<>();\r\n\r\n        res.put(id, token);\r\n\r\n        return res;\r\n    }\r\n\r\n    public static void createUser(String name, String email, String password) {\r\n        User user = new User(name, email, password);\r\n        UserRepository.createUser(user);//if user is regestered make anything\r\n\r\n\r\n    }\r\n\r\n    public static void deleteUserFromMap(int id) {\r\n        userTokens.remove(id);\r\n    }\r\n\r\n    public static String getSaltString(int stringLength) {\r\n        String SALTCHARS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";\r\n        StringBuilder salt = new StringBuilder();\r\n        while (salt.length() < stringLength) {\r\n            int index = (int) (ThreadLocalRandom.current().nextFloat() * SALTCHARS.length());\r\n            salt.append(SALTCHARS.charAt(index));\r\n        }\r\n        String saltStr = salt.toString();\r\n        return saltStr;\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/AuthenticationProject/Services/AuthenticationService.java b/src/main/java/AuthenticationProject/Services/AuthenticationService.java
--- a/src/main/java/AuthenticationProject/Services/AuthenticationService.java	(revision fbba7fcbf4e46bcb41ec4f001dfcb3dc2d18ee86)
+++ b/src/main/java/AuthenticationProject/Services/AuthenticationService.java	(date 1667161083441)
@@ -36,21 +36,21 @@
         return getSaltString(18);
     }
 
-    public static HashMap<String, String> logIn(String email, String password) {
-        //check if the user is not loged in.
-        //check if it's user -> return id
-        String id = UserRepository.checkIfUserExists(email, password);
-        if (userTokens.containsKey(id)) {
-            throw new IllegalArgumentException("the user is logged in ");
-        }
-        String token = createToken();
-        userTokens.put(id, token);
-        HashMap<String, String> res = new HashMap<>();
-
-        res.put(id, token);
-
-        return res;
-    }
+//    public static HashMap<String, String> logIn(String email, String password) {
+//        //check if the user is not loged in.
+//        //check if it's user -> return id
+//        String id = UserRepository.checkIfUserExists(email, password);
+//        if (userTokens.containsKey(id)) {
+//            throw new IllegalArgumentException("the user is logged in ");
+//        }
+//        String token = createToken();
+//        userTokens.put(id, token);
+//        HashMap<String, String> res = new HashMap<>();
+//
+//        res.put(id, token);
+//
+//        return res;
+//    }
 
     public static void createUser(String name, String email, String password) {
         User user = new User(name, email, password);
Index: src/main/java/AuthenticationProject/Services/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package AuthenticationProject.Services;\r\n\r\nimport AuthenticationProject.UserRepository.UserRepository;\r\n\r\npublic class UserService {\r\n\r\n    private static UserService userService;\r\n    private static AuthenticationService authService;\r\n    private static UserRepository userRepository;\r\n\r\n    private UserService() {\r\n        userRepository = UserRepository.getInstance();\r\n    }\r\n\r\n\r\n    private UserService(){\r\n        UserRepository.getInstance();\r\n    }\r\n\r\n    public static synchronized UserService getInstance() {\r\n        if (userService == null) {\r\n            userService = new UserService();\r\n        }\r\n        return userService;\r\n    }\r\n\r\n    public void updateEmail(String id, String email) {\r\n        UserRepository.updateEmail(id, email);\r\n    }\r\n\r\n    public void updatePassword(String id, String password) {\r\n        UserRepository.updatePassword(id, password);\r\n    }\r\n\r\n    public void updateUserName(String id, String username) {\r\n\r\n        UserRepository.updateName(id, username);\r\n    }\r\n\r\n    public void deleteUser(String id) {\r\n        UserRepository.deleteUser(id);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/AuthenticationProject/Services/UserService.java b/src/main/java/AuthenticationProject/Services/UserService.java
--- a/src/main/java/AuthenticationProject/Services/UserService.java	(revision fbba7fcbf4e46bcb41ec4f001dfcb3dc2d18ee86)
+++ b/src/main/java/AuthenticationProject/Services/UserService.java	(date 1667161104896)
@@ -13,9 +13,6 @@
     }
 
 
-    private UserService(){
-        UserRepository.getInstance();
-    }
 
     public static synchronized UserService getInstance() {
         if (userService == null) {
Index: src/main/java/AuthenticationProject/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package AuthenticationProject;\r\n\r\nimport AuthenticationProject.Controllers.AuthenticationController;\r\nimport AuthenticationProject.Controllers.UserController;\r\nimport AuthenticationProject.Services.AuthenticationService;\r\nimport AuthenticationProject.UserRepository.UserRepository;\r\n\r\n\r\nimport java.util.HashMap;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n\r\n        //Tests.testUpdateEmail();\r\n        //Tests.testUpdatePassword();\r\n        //Tests.testDeleteUser();\r\n\r\n        UserRepository.checkIfUserExists(\"sdfs\",\"sdfsf\");\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/AuthenticationProject/Main.java b/src/main/java/AuthenticationProject/Main.java
--- a/src/main/java/AuthenticationProject/Main.java	(revision fbba7fcbf4e46bcb41ec4f001dfcb3dc2d18ee86)
+++ b/src/main/java/AuthenticationProject/Main.java	(date 1667161083432)
@@ -11,9 +11,9 @@
 public class Main {
     public static void main(String[] args) {
 
-        //Tests.testUpdateEmail();
-        //Tests.testUpdatePassword();
-        //Tests.testDeleteUser();
+        Tests.testUpdateEmail();
+        Tests.testUpdatePassword();
+        Tests.testDeleteUser();
 
         UserRepository.checkIfUserExists("sdfs","sdfsf");
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"967138cf-31d8-478e-b9c7-ee606e155bfb\" name=\"Changes\" comment=\"fixing conflicts\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30_10_2022_19_17__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30_10_2022_19_17__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/AuthenticationProject/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/AuthenticationProject/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/AuthenticationProject/UserRepository/UserRepository.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/AuthenticationProject/UserRepository/UserRepository.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2GqrMeaR3WTqjtGlxK0tkzEGvPF\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"967138cf-31d8-478e-b9c7-ee606e155bfb\" name=\"Changes\" comment=\"\" />\r\n      <created>1667126908910</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1667126908910</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Moved package\">\r\n      <created>1667127220300</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1667127220300</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00002\" summary=\"pull from master\">\r\n      <created>1667132764336</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1667132764336</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00003\" summary=\"wrapping with package\">\r\n      <created>1667132953065</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1667132953065</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00004\" summary=\"adding createUser method\">\r\n      <created>1667134783630</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1667134783630</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00005\" summary=\"createUser method\">\r\n      <created>1667137647210</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1667137647210</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00006\" summary=\"adding chackIfEmailExists\">\r\n      <created>1667138836180</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1667138836180</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00007\" summary=\"adding updateEmail\">\r\n      <created>1667141486991</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1667141486991</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"8\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Moved package\" />\r\n    <MESSAGE value=\"pull from master\" />\r\n    <MESSAGE value=\"wrapping with package\" />\r\n    <MESSAGE value=\"adding createUser method\" />\r\n    <MESSAGE value=\"createUser method\" />\r\n    <MESSAGE value=\"adding chackIfEmailExists\" />\r\n    <MESSAGE value=\"adding updateEmail\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"adding updateEmail\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/AuthenticationProject/UserRepository/UserRepository.java</url>\r\n          <line>67</line>\r\n          <properties class=\"AuthenticationProject.UserRepository.UserRepository\" method=\"checkIfUserExists\">\r\n            <option name=\"EMULATED\" value=\"true\" />\r\n            <option name=\"WATCH_EXIT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"6\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision fbba7fcbf4e46bcb41ec4f001dfcb3dc2d18ee86)
+++ b/.idea/workspace.xml	(date 1667161240921)
@@ -4,11 +4,13 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="967138cf-31d8-478e-b9c7-ee606e155bfb" name="Changes" comment="fixing conflicts">
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30_10_2022_19_17__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30_10_2022_19_17__Changes_.xml" afterDir="false" />
+    <list default="true" id="967138cf-31d8-478e-b9c7-ee606e155bfb" name="Changes" comment="adding getIdByEmail">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_30_10_2022_20_53__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_30_10_2022_20_53__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30_10_2022_20_54__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30_10_2022_20_54__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/AuthenticationProject/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/AuthenticationProject/Main.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/AuthenticationProject/UserRepository/UserRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/AuthenticationProject/UserRepository/UserRepository.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/AuthenticationProject/Services/AuthenticationService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/AuthenticationProject/Services/AuthenticationService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/AuthenticationProject/Services/UserService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/AuthenticationProject/Services/UserService.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -25,7 +27,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="master" />
+        <entry key="$PROJECT_DIR$" value="testing" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -137,19 +139,4 @@
     <MESSAGE value="adding updateEmail" />
     <option name="LAST_COMMIT_MESSAGE" value="adding updateEmail" />
   </component>
-  <component name="XDebuggerManager">
-    <breakpoint-manager>
-      <breakpoints>
-        <line-breakpoint enabled="true" type="java-method">
-          <url>file://$PROJECT_DIR$/src/main/java/AuthenticationProject/UserRepository/UserRepository.java</url>
-          <line>67</line>
-          <properties class="AuthenticationProject.UserRepository.UserRepository" method="checkIfUserExists">
-            <option name="EMULATED" value="true" />
-            <option name="WATCH_EXIT" value="false" />
-          </properties>
-          <option name="timeStamp" value="6" />
-        </line-breakpoint>
-      </breakpoints>
-    </breakpoint-manager>
-  </component>
 </project>
\ No newline at end of file
